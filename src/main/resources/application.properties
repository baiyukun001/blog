# Thymeleaf \u7F16\u7801
spring.thymeleaf.encoding=UTF-8
# \u70ED\u90E8\u7F72\u9759\u6001\u6587\u4EF6
spring.thymeleaf.cache=false
# \u4F7F\u7528HTML5\u6807\u51C6
spring.thymeleaf.mode=HTML5

# \u4F7F\u7528 H2 \u63A7\u5236\u53F0
#spring.h2.console.enabled=true

# DataSource
spring.datasource.url=jdbc:mysql://192.168.213.129:3306/blog?useSSL=false&serverTimezone=UTC&characterEncoding=utf-8&autoReconnect=true 
spring.datasource.username=root
spring.datasource.password=baiyukun
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# \u6307\u5B9A\u542F\u52A8\u8FDE\u63A5\u6C60\u65F6\uFF0C\u521D\u59CB\u5EFA\u7ACB\u7684\u8FDE\u63A5\u6570\u91CF
spring.datasource.tomcat.initial-size=5
# \u59CB\u7EC8\u4FDD\u7559\u5728\u6C60\u4E2D\u7684\u6700\u5C0F\u8FDE\u63A5\u6570
spring.datasource.tomcat.min-idle=5
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u4E2D\u6700\u5927\u7684\u6D3B\u8DC3\u8FDE\u63A5\u6570
spring.datasource.tomcat.max-active=20
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u7B49\u5F85\u8FDE\u63A5\u8FD4\u56DE\u7684\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF0C\u6BEB\u79D2\u5355\u4F4D
spring.datasource.tomcat.max-wait=60000
# \u5728\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B\u8FD0\u884C\u671F\u95F4\u4F11\u7720\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.datasource.tomcat.time-between-eviction-runs-millis=60000
# \u8FDE\u63A5\u5728\u6C60\u4E2D\u4FDD\u6301\u7A7A\u95F2\u800C\u4E0D\u88AB\u56DE\u6536\u7684\u6700\u5C0F\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.datasource.tomcat.min-evictable-idle-time-millis=300000
# \u5728\u8FDE\u63A5\u6C60\u8FD4\u56DE\u8FDE\u63A5\u7ED9\u8C03\u7528\u8005\u524D\u7528\u6765\u5BF9\u8FDE\u63A5\u8FDB\u884C\u9A8C\u8BC1\u7684\u67E5\u8BE2 SQL
spring.datasource.tomcat.validation-query=SELECT 1 FROM DUAL
# \u5BF9\u6C60\u4E2D\u7A7A\u95F2\u7684\u8FDE\u63A5\u662F\u5426\u8FDB\u884C\u9A8C\u8BC1\uFF0C\u9A8C\u8BC1\u5931\u8D25\u5219\u56DE\u6536\u6B64\u8FDE\u63A5
spring.datasource.tomcat.test-while-idle=true
# \u5F53\u4ECE\u8FDE\u63A5\u6C60\u4E2D\u53D6\u51FA\u4E00\u4E2A\u8FDE\u63A5\u65F6\u662F\u5426\u8FDB\u884C\u9A8C\u8BC1\uFF0C
spring.datasource.tomcat.test-on-borrow=false
# \u5F53\u4E00\u4E2A\u8FDE\u63A5\u4F7F\u7528\u5B8C\u5F52\u8FD8\u5230\u8FDE\u63A5\u6C60\u65F6\u662F\u5426\u8FDB\u884C\u9A8C\u8BC1
spring.datasource.tomcat.test-on-return=false
# \u5728\u4F7F\u7528DBCP connection pool\u65F6\u6307\u5B9A\u8981\u914D\u7F6E\u7684\u5C5E\u6027
spring.datasource.tomcat.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


# JPA
spring.jpa.show-sql = true
# spring.jpa.hibernate.ddl-auto=create-drop

# \u6587\u4EF6\u670D\u52A1\u5668\u7684\u63A5\u53E3\u7684\u4F4D\u7F6E
file.server.url=http://192.168.213.129:8082/upload

# Elasticsearch \u670D\u52A1\u5730\u5740
spring.data.elasticsearch.cluster-nodes=192.168.213.129:9300
# \u8BBE\u7F6E\u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4
spring.data.elasticsearch.properties.transport.tcp.connect_timeout=120s

server.compression.enabled=true
server.compression.mime-types=application/javascript,text/css,application/json,application/xml,text/html,text/xml,text/plain